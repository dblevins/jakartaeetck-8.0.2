<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012 International Business Machines Corp. See the NOTICE file distributed with this work 
	for additional information regarding copyright ownership. Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain 
	a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law 
	or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language 
	governing permissions and limitations under the License. -->
<job id="decider_transitions_on_restart" xmlns="http://xmlns.jcp.org/xml/ns/javaee" version="1.0">
	<step id="step1" next="decider1" allow-start-if-complete="#{jobParameters['allow.start.if.complete']}">
		<batchlet ref="multipleExitStatusBatchlet">
			<properties>
				<!-- The job parameters pass in the execution count so we can run differently on each restart -->
				<property name="stop.job.after.this.step" value="#{jobParameters['stop.job.after.this.step']}" />
				<property name="fail.job.after.this.step" value="#{jobParameters['fail.job.after.this.step']}" />
				<property name="step.complete.but.force.job.stopped.status" value="#{jobParameters['step.complete.but.force.job.stopped.status']}" />
				<property name="step.complete.but.force.job.failed.status" value="#{jobParameters['step.complete.but.force.job.failed.status']}" />
			</properties>
		</batchlet>
	</step>
	<flow id="flow1" next="decider2">
		<step id="flow1step1" next="deciderInFlow" allow-start-if-complete="#{jobParameters['allow.start.if.complete']}">
			<batchlet ref="multipleExitStatusBatchlet">
				<properties>
					<!-- The job parameters pass in the execution count so we can run differently on each restart -->
					<property name="stop.job.after.this.step" value="#{jobParameters['stop.job.after.this.step']}" />
					<property name="fail.job.after.this.step" value="#{jobParameters['fail.job.after.this.step']}" />
					<property name="step.complete.but.force.job.stopped.status" value="#{jobParameters['step.complete.but.force.job.stopped.status']}" />
					<property name="step.complete.but.force.job.failed.status" value="#{jobParameters['step.complete.but.force.job.failed.status']}" />
				</properties>
			</batchlet>
		</step>
		<decision id="deciderInFlow" ref="transitionDecider">
			<properties>
				<!-- We need this property only for the allow-start-if-complete=false tests. Otherwise we don't want 
					to set it to prove that we rerun the completed step and use the new exit status. -->
				<property name="is.restart" value="#{jobParameters['is.restart']}" />
			</properties>
			<stop on="*:#{jobParameters['step.complete.but.force.job.stopped.status']}" />
			<fail on="*:#{jobParameters['step.complete.but.force.job.stopped.status']}" />
			<next on="*:flow1step1_CONTINUE" to="flow1step2" />
		</decision>
		<step id="flow1step2" allow-start-if-complete="#{jobParameters['allow.start.if.complete']}">
			<batchlet ref="multipleExitStatusBatchlet">
				<properties>
					<!-- The job parameters pass in the execution count so we can run differently on each restart -->
					<property name="stop.job.after.this.step" value="#{jobParameters['stop.job.after.this.step']}" />
					<property name="fail.job.after.this.step" value="#{jobParameters['fail.job.after.this.step']}" />
					<property name="step.complete.but.force.job.stopped.status" value="#{jobParameters['step.complete.but.force.job.stopped.status']}" />
					<property name="step.complete.but.force.job.failed.status" value="#{jobParameters['step.complete.but.force.job.failed.status']}" />
				</properties>
			</batchlet>
		</step>
	</flow>
	<decision id="decider1" ref="transitionDecider">
		<properties>
			<!-- We need this property only for the allow-start-if-complete=false tests. Otherwise we don't want 
				to set it to prove that we rerun the completed step and use the new exit status. -->
			<property name="is.restart" value="#{jobParameters['is.restart']}" />
		</properties>
		<stop on="*:#{jobParameters['step.complete.but.force.job.stopped.status']}" />
		<fail on="*:#{jobParameters['step.complete.but.force.job.failed.status']}" />
		<next on="*:step1_CONTINUE" to="flow1" />
		<fail on="*" />
	</decision>
	<decision id="decider2" ref="transitionDecider">
		<properties>
			<!-- We need this property only for the allow-start-if-complete=false tests. Otherwise we don't want 
				to set it to prove that we rerun the completed step and use the new exit status. -->
			<property name="is.restart" value="#{jobParameters['is.restart']}" />
		</properties>
		<stop on="*:#{jobParameters['step.complete.but.force.job.stopped.status']}" />
		<fail on="*:#{jobParameters['step.complete.but.force.job.failed.status']}" />
		<end on="*:flow1step2_CONTINUE" />
		<fail on="*" />
	</decision>
</job>