<!--

    Copyright (c) 2002, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!--
 @(#)csiv2log.dtd	1.7 02/01/12
-->

<?xml version='1.0' encoding='UTF-8' ?>

<!--Generated by XML Authority-->

<!ELEMENT req-svc-context (establish-context | invalid-message)?>

<!ATTLIST req-svc-context  present CDATA     #REQUIRED
                            a-dtype NMTOKENS  'present boolean' >
<!ELEMENT reply-svc-context (complete-establish-context | context-error | invalid-message)?>

<!ATTLIST reply-svc-context  present CDATA     #REQUIRED
                              a-dtype NMTOKENS  'present boolean' >
<!ELEMENT ssl-used (#PCDATA)>

<!ATTLIST ssl-used  e-dtype NMTOKEN  #FIXED 'boolean' >
<!ELEMENT ior (port , stateful , compound-sec-mech+)>

<!ELEMENT location-forward (#PCDATA)>

<!ATTLIST location-forward  e-dtype NMTOKEN  #FIXED 'boolean' >
<!ELEMENT operation (#PCDATA)>

<!ATTLIST operation  e-dtype NMTOKEN  #FIXED 'string' >
<!ELEMENT princpal (#PCDATA)>

<!ATTLIST princpal  e-dtype NMTOKEN  #FIXED 'string' >
<!ELEMENT assertion (invocation)>

<!ATTLIST assertion  name CDATA  #REQUIRED >
<!ELEMENT csiv2-log (assertion*)>

<!ELEMENT ejb-home (client)>

<!ELEMENT ejb-remote (client)>

<!ELEMENT client ( (client-interceptor | server-interceptor | server) , reply)>

<!ELEMENT reply (no-exception | access-exception | create-exception | other-exception)>

<!ELEMENT no-exception EMPTY>

<!ELEMENT access-exception (#PCDATA)>

<!ELEMENT create-exception (#PCDATA)>

<!ELEMENT other-exception (#PCDATA)>

<!ELEMENT server (invocation-principal , invocation?)>

<!ELEMENT client-interceptor (operation , req-svc-context , ssl-used , ior , (server-interceptor | server)? , location-forward , reply-svc-context , client-interceptor?)>

<!ELEMENT server-interceptor (operation , req-svc-context , ssl-used , transport-client-principals , server? , reply-svc-context?)>

<!ELEMENT invocation (ejb-home* , ejb-remote*)>

<!ELEMENT invocation-principal (#PCDATA)>

<!ATTLIST invocation-principal  e-dtype NMTOKEN  #FIXED 'string' >
<!ELEMENT transport-client-principals (princpal*)>

<!ELEMENT ior-transport-mech (tls-trans | null-trans | other-trans)>

<!ELEMENT ior-as-context (target-supports , target-requires , client-authentication-mech , target-name)>

<!ELEMENT ior-sas-context (target-supports , target-requires, supported-naming-mechanism+, supported-identity-types)>

<!ELEMENT target-supports (#PCDATA)>

<!ATTLIST target-supports  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT target-requires (#PCDATA)>

<!ATTLIST target-requires  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT client-authentication-mech (#PCDATA)>

<!ATTLIST client-authentication-mech  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT target-name (#PCDATA)>

<!ATTLIST target-name  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT supported-naming-mechanism (#PCDATA)>

<!ATTLIST supported-naming-mechanism  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT supported-identity-types (#PCDATA)>

<!ELEMENT service-config-syntax (#PCDATA)>

<!ATTLIST service-config-syntax  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT service-specific-name (#PCDATA)>

<!ATTLIST service-specific-name  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT tls-trans (target-supports , target-requires , trans-addr+)>

<!ELEMENT trans-addr (host-name , port)>

<!ELEMENT host-name (#PCDATA)>

<!ELEMENT port (#PCDATA)>

<!ELEMENT mech-oid (#PCDATA)>

<!ATTLIST mech-oid  e-dtype NMTOKEN  #FIXED 'bin.hex' >

<!ATTLIST port  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT identity-token (absent | anonymous | principal-name | certificate-chain | distinguished-name | unknown-type)>

<!ELEMENT client-auth-token (#PCDATA)>

<!ATTLIST client-auth-token  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT absent EMPTY>

<!ELEMENT anonymous EMPTY>

<!ELEMENT principal-name (#PCDATA)>

<!ATTLIST principal-name  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT certificate-chain (#PCDATA)>

<!ATTLIST certificate-chain  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT distinguished-name (#PCDATA)>

<!ATTLIST distinguished-name  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT complete-establish-context (client-context-id , context-stateful , final-context-token)>

<!ELEMENT context-error (client-context-id , major-status , minor-status , error-token)>

<!ELEMENT establish-context (client-context-id , identity-token , client-auth-token , authz-token-count)>

<!ELEMENT client-context-id (#PCDATA)>

<!ATTLIST client-context-id  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT context-stateful (#PCDATA)>

<!ATTLIST context-stateful  e-dtype NMTOKEN  #FIXED 'boolean' >
<!ELEMENT final-context-token (#PCDATA)>

<!ATTLIST final-context-token  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT major-status (#PCDATA)>

<!ATTLIST major-status  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT minor-status (#PCDATA)>

<!ATTLIST minor-status  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT error-token (#PCDATA)>

<!ATTLIST error-token  e-dtype NMTOKEN  #FIXED 'bin.hex' >
<!ELEMENT null-trans EMPTY>

<!ELEMENT other-trans EMPTY>

<!ATTLIST other-trans  details CDATA  #IMPLIED >
<!ELEMENT invalid-message EMPTY>

<!ATTLIST invalid-message  details CDATA  #IMPLIED >
<!ELEMENT unknown-type EMPTY>

<!ATTLIST unknown-type  details CDATA  #IMPLIED >
<!ELEMENT authz-token-count (#PCDATA)>

<!ATTLIST authz-token-count  e-dtype NMTOKEN  #FIXED 'int' >
<!ELEMENT compound-sec-mech (target-requires , ior-transport-mech , ior-as-context , ior-sas-context)>

<!ELEMENT stateful (#PCDATA)>

<!ATTLIST stateful  e-dtype NMTOKEN  #FIXED 'boolean' >
