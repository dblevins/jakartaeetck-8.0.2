/*
 * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.1, build R5)
// Generated source version: 1.1.1

package com.sun.ts.tests.jaxrpc.ee.w2j.rpc.encoded.parametermodetest;

import java.util.Map;
import java.util.HashMap;

public class EnumString {
  private java.lang.String value;

  private static Map valueMap = new HashMap();

  public static final String _String1String = "String1";

  public static final String _String2String = "String2";

  public static final java.lang.String _String1 = new java.lang.String(
      _String1String);

  public static final java.lang.String _String2 = new java.lang.String(
      _String2String);

  public static final EnumString String1 = new EnumString(_String1);

  public static final EnumString String2 = new EnumString(_String2);

  protected EnumString(java.lang.String value) {
    this.value = value;
    valueMap.put(this.toString(), this);
  }

  public java.lang.String getValue() {
    return value;
  }

  public static EnumString fromValue(java.lang.String value)
      throws java.lang.IllegalStateException {
    if (String1.value.equals(value)) {
      return String1;
    } else if (String2.value.equals(value)) {
      return String2;
    }
    throw new IllegalArgumentException();
  }

  public static EnumString fromString(String value)
      throws java.lang.IllegalStateException {
    EnumString ret = (EnumString) valueMap.get(value);
    if (ret != null) {
      return ret;
    }
    if (value.equals(_String1String)) {
      return String1;
    } else if (value.equals(_String2String)) {
      return String2;
    }
    throw new IllegalArgumentException();
  }

  public String toString() {
    return value.toString();
  }

  private Object readResolve() throws java.io.ObjectStreamException {
    return fromValue(getValue());
  }

  public boolean equals(Object obj) {
    if (!(obj instanceof EnumString)) {
      return false;
    }
    return ((EnumString) obj).value.equals(value);
  }

  public int hashCode() {
    return value.hashCode();
  }
}
