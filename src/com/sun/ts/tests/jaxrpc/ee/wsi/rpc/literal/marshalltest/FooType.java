/*
 * Copyright (c) 2007, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

/*
 * $Id$
 */

// This class was generated by the JAXRPC RI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Reference Implementation (1.1, build EA-R15)

package com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest;

public class FooType {
  protected boolean fooA;

  protected byte fooB;

  protected short fooC;

  protected int fooD;

  protected long fooE;

  protected float fooF;

  protected double fooG;

  protected java.lang.String fooH;

  protected java.lang.String fooI;

  protected com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooVariousSchemaTypes fooJ;

  protected java.math.BigInteger fooK;

  protected java.lang.String fooM;

  protected com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooAnonymousType fooN;

  public FooType() {
  }

  public FooType(boolean fooA, byte fooB, short fooC, int fooD, long fooE,
      float fooF, double fooG, java.lang.String fooH, java.lang.String fooI,
      com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooVariousSchemaTypes fooJ,
      java.math.BigInteger fooK, java.lang.String fooM,
      com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooAnonymousType fooN) {
    this.fooA = fooA;
    this.fooB = fooB;
    this.fooC = fooC;
    this.fooD = fooD;
    this.fooE = fooE;
    this.fooF = fooF;
    this.fooG = fooG;
    this.fooH = fooH;
    this.fooI = fooI;
    this.fooJ = fooJ;
    this.fooK = fooK;
    this.fooM = fooM;
    this.fooN = fooN;
  }

  public boolean isFooA() {
    return fooA;
  }

  public void setFooA(boolean fooA) {
    this.fooA = fooA;
  }

  public byte getFooB() {
    return fooB;
  }

  public void setFooB(byte fooB) {
    this.fooB = fooB;
  }

  public short getFooC() {
    return fooC;
  }

  public void setFooC(short fooC) {
    this.fooC = fooC;
  }

  public int getFooD() {
    return fooD;
  }

  public void setFooD(int fooD) {
    this.fooD = fooD;
  }

  public long getFooE() {
    return fooE;
  }

  public void setFooE(long fooE) {
    this.fooE = fooE;
  }

  public float getFooF() {
    return fooF;
  }

  public void setFooF(float fooF) {
    this.fooF = fooF;
  }

  public double getFooG() {
    return fooG;
  }

  public void setFooG(double fooG) {
    this.fooG = fooG;
  }

  public java.lang.String getFooH() {
    return fooH;
  }

  public void setFooH(java.lang.String fooH) {
    this.fooH = fooH;
  }

  public java.lang.String getFooI() {
    return fooI;
  }

  public void setFooI(java.lang.String fooI) {
    this.fooI = fooI;
  }

  public com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooVariousSchemaTypes getFooJ() {
    return fooJ;
  }

  public void setFooJ(
      com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooVariousSchemaTypes fooJ) {
    this.fooJ = fooJ;
  }

  public java.math.BigInteger getFooK() {
    return fooK;
  }

  public void setFooK(java.math.BigInteger fooK) {
    this.fooK = fooK;
  }

  public java.lang.String getFooM() {
    return fooM;
  }

  public void setFooM(java.lang.String fooM) {
    this.fooM = fooM;
  }

  public com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooAnonymousType getFooN() {
    return fooN;
  }

  public void setFooN(
      com.sun.ts.tests.jaxrpc.ee.wsi.rpc.literal.marshalltest.FooAnonymousType fooN) {
    this.fooN = fooN;
  }
}
