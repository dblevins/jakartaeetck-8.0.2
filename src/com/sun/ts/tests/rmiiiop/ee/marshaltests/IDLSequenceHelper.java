/*
 * Copyright (c) 2007, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

/*
 * $Id$
 */

package com.sun.ts.tests.rmiiiop.ee.marshaltests;

/**
 * com/sun/ts/tests/rmiiiop/ee/marshaltests/IDLSequenceHelper.java Generated by
 * the IDL-to-Java compiler (portable), version "3.0" from idl.idl Monday,
 * February 26, 2001 10:51:35 AM EST
 */

abstract public class IDLSequenceHelper {
  private static String _id = "IDL:com/sun/ts/tests/rmiiiop/ee/marshaltests/IDLSequence:1.0";

  public static void insert(org.omg.CORBA.Any a,
      com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStruct[] that) {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream();
    a.type(type());
    write(out, that);
    a.read_value(out.create_input_stream(), type());
  }

  public static com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStruct[] extract(
      org.omg.CORBA.Any a) {
    return read(a.create_input_stream());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;

  synchronized public static org.omg.CORBA.TypeCode type() {
    if (__typeCode == null) {
      __typeCode = com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStructHelper
          .type();
      __typeCode = org.omg.CORBA.ORB.init().create_sequence_tc(10, __typeCode);
      __typeCode = org.omg.CORBA.ORB.init().create_alias_tc(
          com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLSequenceHelper.id(),
          "IDLSequence", __typeCode);
    }
    return __typeCode;
  }

  public static String id() {
    return _id;
  }

  public static com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStruct[] read(
      org.omg.CORBA.portable.InputStream istream) {
    com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStruct value[] = null;
    int _len0 = istream.read_long();
    if (_len0 > (10))
      throw new org.omg.CORBA.MARSHAL(0,
          org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    value = new com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStruct[_len0];
    for (int _o1 = 0; _o1 < value.length; ++_o1)
      value[_o1] = com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStructHelper
          .read(istream);
    return value;
  }

  public static void write(org.omg.CORBA.portable.OutputStream ostream,
      com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStruct[] value) {
    if (value.length > (10))
      throw new org.omg.CORBA.MARSHAL(0,
          org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    ostream.write_long(value.length);
    for (int _i0 = 0; _i0 < value.length; ++_i0)
      com.sun.ts.tests.rmiiiop.ee.marshaltests.IDLStructHelper.write(ostream,
          value[_i0]);
  }

}
